{"version":3,"sources":["Firebase/Firebase.utils.jsx","Components/NavBar/NavBar.jsx","Redux/Actions/Action Creators/HomepageActionsCreators/HomepageActionCreators.jsx","Redux/Actions/Action Constants/Homepage_Action_Constants/Homepage_Action_constants.jsx","Components/Pre-Loader/Pre_Loader.jsx","Pages/Homepage/Homepage.jsx","Pages/CreateBoardPage/Board_Page.jsx","Components/Modal/Modal.jsx","Components/AddColumns/Add_Column.jsx","Components/BoardColumnCard/Card.jsx","Components/BoardColumn/Board_Column.jsx","Pages/IndividualBoardPage/MyBoard.jsx","Pages/SignInSignUp Page/SignIn_SignUp.jsx","App.js","serviceWorker.js","Redux/Reducers/Initial State/Homepage_Initial_State.jsx","Redux/Reducers/Homepage_Reducer/HomepageReducer.jsx","Redux/Store/GlobalStore.jsx","index.js","Components/AddColumns/Add_Column.module.scss","Components/NavBar/NavBar.module.scss","Pages/Homepage/Homepage.module.scss","Pages/CreateBoardPage/Board_Page.module.scss","Pages/IndividualBoardPage/MyBoard.module.scss","stone.jpg","Components/BoardColumn/Board_Column.module.scss","Components/BoardColumnCard/Card.module.scss","Components/Modal/Modal.module.scss","user.png"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionaldata","a","userRef","firestore","doc","uid","get","exists","displayName","email","createdAt","Date","set","alert","message","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","NavBar","currentUser","className","Style","container","brand","to","exact","activeClassName","active","style","textDecoration","item1","fetch_Board_Data","type","Pre_Loader","width","display","justifyContent","margin","class","height","role","Homepage","this","props","fetchData","console","log","boardData","loading","textAlign","Container","Boards","mainContainer","Object","entries","map","board","key","pathname","boardName","state","boardId","boardMembers","boardMember","Noboards","Component","connect","HomepageReducer","error","dispatch","axios","then","res","data","payload","catch","err","errormessage","fetch_Board_Data_Failure","Board_Page","history","useHistory","useState","setBoardName","setBoardMember","boardType","setBoardType","loader","setLoader","board_container","createboard","onSubmit","e","preventDefault","post","push","htmlFor","formDiv","placeholder","onChange","target","value","id","required","split","join","Modal","children","Backdrop","Modal_content","Add_Column","setShowColumn","undefined","columnName","setColumnName","showModal","setShowModal","title","onClick","fontSize","addColumn","backgroundImage","Pic","heading","response","name","buttons","btn1","btn2","withRouter","columnId","isCardDragged","location","useLocation","useParams","showCardDetails","setShowCardDetails","taskTitle","setTaskTitle","taskMembers","setTaskMembers","taskDescription","setTaskDescription","taskDueDate","setTaskDueDate","isCardInserted","setIsCardInseterted","cardDetails","setCardDetails","cardDetailsTitle","setCardDetailsTitle","cardDetailsMembers","setCardDetailsMembers","cardDetailsDescription","setCardDetailsDescription","cardDetailsDueDate","setCardDetailsDueDate","cardId","setCardId","editCardDetails","setEditCardDetails","isCardEdited","setIsCardEdited","isCardDeleted","setIsCardDeleted","todayDate","toISOString","slice","useEffect","card","draggable","onDragStart","dragcardId","cardData","draggedCardDetails","dataTransfer","setData","JSON","stringify","handleDragging","addedcard","handleCardDetailsClick","textTransform","member","members","charAt","cardelement","put","swal","icon","timer","defaultValue","multiple","selectedoptions","selectedOptions","cardtitle","handleButtons","text","toUpperCase","dangerMode","willDelete","delete","fontWeight","boardtype","membersboard","button","Board_Column","handleColumnDelete","setIsCardDragged","uppreroutercontainer","outercontainer","innercontainer","marginLeft","marginRight","cursor","onDragOver","onDrop","droppingCardData","parse","getData","draggingFromColumnId","draggingFromCardId","draggingFromCardData","MyBoard","newColumn","setnewColumn","showColumn","isColumnDeleted","setIsColumnDeleted","getColumnName","HandleColumnDelete","myboard","boardTitle","smallbtn","column","SignIn_SignUp","password","setPassword","setEmail","signup_password","set_signup_password","signup_username","set_signup_username","signup_email","set_signup_email","reDirectToHome","handleSignUp","createUserWithEmailAndPassword","user","Swal","PIC","backgroundSize","handleSignIn","signInWithEmailAndPassword","color","x","document","getElementById","y","z","left","padding","App","path","component","SignIn_SignUp_Page","render","strict","Boolean","window","hostname","match","Homepage_Initial_State","action","allReducers","combineReducers","GlobalStore","createStore","composeWithDevTools","applyMiddleware","logger","thunk","ReactDOM","basename","process","store","module","exports"],"mappings":"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","file":"static/js/main.aa129cde.chunk.js","sourcesContent":["import firebase from \"firebase/app\"; //pulling firebase utility library that belongs at firebase/app\r\nimport \"firebase/firestore\"; //imported database library\r\nimport \"firebase/auth\"; //imported authentication library\r\n//we need to import firebase because firestore and auth will be availiable to us then\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB0PhHVDdrKsITYN7FaJW1uzOxOBAQiOzI\",\r\n  authDomain: \"pro-organizer-app-4cab0.firebaseapp.com\",\r\n  databaseURL: \"https://pro-organizer-app-4cab0.firebaseio.com\",\r\n  projectId: \"pro-organizer-app-4cab0\",\r\n  storageBucket: \"pro-organizer-app-4cab0.appspot.com\",\r\n  messagingSenderId: \"507797288588\",\r\n  appId: \"1:507797288588:web:f5d6e15b08e81db91ceda9\",\r\n  measurementId: \"G-DS9014FQPN\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n// val firestoreSettings = FirebaseFirestoreSettings.Builder()\r\n//     .setPersistenceEnabled(true)\r\n//     .build()\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionaldata) => {\r\n  //passed 2 arg i.e 1-the user obj we are getting from firebase and 2-is for signup functionality\r\n  //we will only save data when user is signed in\r\n  if (!userAuth) {\r\n    return;\r\n  }\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`); //whether the user exist in our database or not??\r\n  const snapShot = await userRef.get();\r\n  // console.log(snapShot);\r\n  if (!snapShot.exists) {\r\n    //if user doesnot exist create data in database\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionaldata,\r\n      });\r\n    } catch (err) {\r\n      alert(\"something went wrong\" + err.message);\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider(); //gives acces to google authentication from auth library\r\n//it takes some custom parameter\r\nprovider.setCustomParameters({ prompt: \"select_account\" }); //to popup google signin page for authentication\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport Style from \"./NavBar.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { auth } from \"../../Firebase/Firebase.utils\";\r\nimport swal from \"sweetalert\";\r\nconst NavBar = ({ currentUser }) => {\r\n  let handleSignOut = () => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \" Do you Want to Sign Out??\",\r\n      icon: \"warning\",\r\n      buttons: [\"NO!\", \"YES!\"],\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        auth.signOut();\r\n      } else {\r\n        return;\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div className={Style.container}>\r\n      <h2 className={Style.brand}>\r\n        Pro-Organizer\r\n      </h2>\r\n      <ul>\r\n        <NavLink\r\n          to=\"/\"\r\n          exact\r\n          activeClassName={Style.active}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <li\r\n            // onClick={() => {\r\n            //   !currentUser &&\r\n            //     swal(\r\n            //       \"You haven't Signed In!\",\r\n            //       \"Please Sign In with registered Email or with Google\",\r\n            //       \"info\"\r\n            //     );\r\n            // }}\r\n            className={Style.item1}\r\n          >\r\n            HOME\r\n          </li>\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"/createboard\"\r\n          activeClassName={Style.active}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <li\r\n            // onClick={() => {\r\n            //   !currentUser &&\r\n            //     swal(\r\n            //       \"You haven't Signed In!\",\r\n            //       \"Please Sign In with registered Email or with Google\",\r\n            //       \"info\"\r\n            //     );\r\n            // }}\r\n          >\r\n            CREATE BOARD\r\n          </li>\r\n        </NavLink>\r\n        {/* {currentUser ? (\r\n          <li onClick={handleSignOut}>SIGN OUT</li>\r\n        ) : ( */}\r\n          <NavLink\r\n            to=\"/signin\"\r\n            exact\r\n            activeClassName={Style.active}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <li className={Style.item1}>SIGN IN</li>\r\n          </NavLink>\r\n        {/* )} */}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import {\r\n  FETCH_BOARD_DATA,\r\n  FETCH_BOARD_DATA_SUCCESS,\r\n  FETCH_BOARD_DATA_FAILURE,\r\n} from \"../../Action Constants/Homepage_Action_Constants/Homepage_Action_constants\";\r\nimport axios from \"axios\";\r\nlet fetch_Board_Data = () => {\r\n  return {\r\n    type: FETCH_BOARD_DATA,\r\n  };\r\n};\r\nlet fetch_Board_Data_Success = boardName => {\r\n  return {\r\n    type: FETCH_BOARD_DATA_SUCCESS,\r\n    payload: boardName,\r\n  };\r\n};\r\nlet fetch_Board_Data_Failure = err => {\r\n  return {\r\n    type: FETCH_BOARD_DATA_FAILURE,\r\n    payload: err,\r\n  };\r\n};\r\nlet fetchData = () => {\r\n  return dispatch => {\r\n    dispatch(fetch_Board_Data);\r\n    axios\r\n      .get(`https://pro-organizer-app-4cab0.firebaseio.com/BoardData.json`)\r\n      .then(res => {\r\n        let boardData = res.data;\r\n        dispatch(fetch_Board_Data_Success(boardData));\r\n      })\r\n      .catch(err => {\r\n        let errormessage = err.message;\r\n        alert(errormessage);\r\n        dispatch(fetch_Board_Data_Failure(errormessage));\r\n      });\r\n  };\r\n};\r\n\r\nexport {\r\n  fetch_Board_Data,\r\n  fetch_Board_Data_Success,\r\n  fetch_Board_Data_Failure,\r\n  fetchData,\r\n};\r\n","let FETCH_BOARD_DATA = \"FETCH_BOARD_DATA\";\r\nlet FETCH_BOARD_DATA_SUCCESS = \"FETCH_BOARD_DATA_SUCCESS\";\r\nlet FETCH_BOARD_DATA_FAILURE = \"FETCH_BOARD_DATA_FAILURE\";\r\n\r\nexport { FETCH_BOARD_DATA, FETCH_BOARD_DATA_SUCCESS, FETCH_BOARD_DATA_FAILURE };\r\n","import React from \"react\";\r\n\r\nconst Pre_Loader = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100vw\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        margin: \"80px 0\",\r\n      }}\r\n    >\r\n      <div\r\n        class=\"spinner-border  text-primary\"\r\n        style={{ width: \"4rem\", height: \"4rem\" }}\r\n        role=\"status\"\r\n      >\r\n        <span class=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pre_Loader;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Style from \"./Homepage.module.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n// import Loader from \"react-loader-spinner\";\r\nimport { fetchData } from \"../../Redux/Actions/Action Creators/HomepageActionsCreators/HomepageActionCreators\";\r\nimport PreLoader from '../../Components/Pre-Loader/Pre_Loader';\r\nclass Homepage extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchData();\r\n    console.log(\"board data:\",this.props.boardData);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.loading ? (\r\n          <h1 style={{ textAlign: \"center\" }}>\r\n            {/* <Loader type=\"Audio\" color=\"#00BFFF\" height={80} width={80} /> */}\r\n            <PreLoader/>\r\n          </h1>\r\n        ) : (\r\n          <div className={Style.Container}>\r\n            <h2 className={Style.Boards}>Boards</h2>\r\n            <div className={Style.mainContainer}>\r\n              {this.props.boardData ? (\r\n                Object.entries(this.props.boardData).map(board => (\r\n                  <Fragment key={board[0]}>\r\n                    <Link\r\n                      to={{\r\n                        pathname: \"/\" + board[1].boardName,\r\n                        state: {\r\n                          boardId: board[0],\r\n                          boardMembers: board[1].boardMember,\r\n                        },\r\n                      }}\r\n                      style={{ textDecoration: \"none\" }}\r\n                    >\r\n                      <div className={Style.board}>\r\n                        <h3>{board[1].boardName}</h3>\r\n                      </div>\r\n                    </Link>\r\n                  </Fragment>\r\n                ))\r\n              ) : (\r\n                <h3 className={Style.Noboards}>\r\n                  You haven't created any boards. Kindly click on the 'Create\r\n                  Board' button in the navigation bar to create a board.\r\n                </h3>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boardData: state.HomepageReducer.boardData,\r\n    loading: state.HomepageReducer.loading,\r\n    error: state.HomepageReducer.error,\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchData: () => dispatch(fetchData()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Style from \"./Board_Page.module.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PreLoader from \"../../Components/Pre-Loader/Pre_Loader\";\r\n\r\nconst Board_Page = () => {\r\n  const history = useHistory();\r\n  const [boardName, setBoardName] = useState(\"\");\r\n  const [boardMember, setBoardMember] = useState(\"\");\r\n  const [boardType, setBoardType] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  let handleBoardName = (e) => {\r\n    let boardName = e.target.value;\r\n    setBoardName(boardName);\r\n  };\r\n  let handleBoardMembers = (e) => {\r\n    let boardMembers = e.target.value;\r\n    setBoardMember(boardMembers.split(\" \").join(\" \"));\r\n  };\r\n  let handleBoardType = (e) => {\r\n    let boardType = e.target.value;\r\n    setBoardType(boardType);\r\n  };\r\n  let reDirectToHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  let postDataToFirebase = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(`https://pro-organizer-app-4cab0.firebaseio.com/BoardData.json`, {\r\n        boardName,\r\n        boardMember,\r\n        boardType,\r\n      })\r\n      .then((res) => reDirectToHome())\r\n      .catch((err) => alert(\"Something went wrong\", err.message));\r\n    setLoader(true);\r\n  };\r\n  return (\r\n    <>\r\n      {loader ? (\r\n        <PreLoader />\r\n      ) : (\r\n        <div className={Style.board_container}>\r\n          <h3 className={Style.createboard}>Create a Board</h3>\r\n          <form onSubmit={postDataToFirebase}>\r\n            <label htmlFor=\"board-name\">\r\n              <h5>Enter a name for your board</h5>\r\n            </label>\r\n            <div className={Style.formDiv}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"e.g Agile Sprint Board\"\r\n                onChange={handleBoardName}\r\n                id=\"name\"\r\n                value={boardName}\r\n                required\r\n              />\r\n            </div>\r\n            <label htmlFor=\"board-members\">\r\n              <h5>Add your team members</h5>\r\n            </label>{\" \"}\r\n            <div className={Style.formDiv}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Add your team(seperated by commas)\"\r\n                onChange={handleBoardMembers}\r\n                id=\"team\"\r\n                value={boardMember}\r\n                required\r\n              />\r\n            </div>\r\n            <label htmlFor=\"board-type\">\r\n              <h5>Enter the type of your board</h5>\r\n            </label>\r\n            <div className={Style.formDiv}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"e.g Design UI(optional)\"\r\n                onChange={handleBoardType}\r\n                id=\"type\"\r\n                value={boardType}\r\n              />\r\n            </div>\r\n            <div>\r\n              <button id=\"CreateBoard\" type=\"submit\">\r\n                Create\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Board_Page;\r\n","import React from \"react\";\r\nimport Style from \"./Modal.module.scss\";\r\n\r\nconst Modal = ({ children }) => {\r\n  return (\r\n    <div className={Style.Backdrop}>\r\n      <div className={Style.Modal_content}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Style from \"./Add_Column.module.scss\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport Pic from \"../../stone.jpg\";\r\n\r\nconst Add_Column = ({ boardId, setShowColumn }) => {\r\n  const [columnName, setColumnName] = useState(undefined);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  let handleAddColumn = () => {\r\n    setShowModal(true);\r\n  };\r\n  let handleCloseModal = (e) => {\r\n    e.preventDefault();\r\n    setShowModal(false);\r\n  };\r\n  let handleChange = (e) => {\r\n    e.preventDefault();\r\n    setColumnName(e.target.value);\r\n  };\r\n  let handleAddColumnToFirebase = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n        `https://pro-organizer-app-4cab0.firebaseio.com/BoardData/${boardId}/board_column.json`,\r\n        {\r\n          columnName,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setShowColumn(true); \r\n      })\r\n      .catch((err) => {\r\n        alert(\"something went wrong , \" + err.message);\r\n      });\r\n    setShowModal(false);\r\n  };\r\n  return (\r\n    <div className={Style.container}>\r\n      <div className={Style.title} onClick={handleAddColumn}>\r\n        <h6>Add a column</h6>&nbsp;\r\n        <i style={{fontSize:\"20px\"}} class=\"fas fa-folder-plus\"></i>\r\n      </div>\r\n      {showModal && (\r\n        <Modal>\r\n          <div className={Style.addColumn}>\r\n            <h4\r\n              style={{ backgroundImage: `url(${Pic})` }}\r\n              className={Style.heading}\r\n            >\r\n              Add a column\r\n            </h4>\r\n          </div>\r\n          <div>\r\n            <form onSubmit={handleAddColumnToFirebase}>\r\n              <label htmlFor=\"column_name\">\r\n                <h5>Enter a column name :</h5>\r\n              </label>{\" \"}\r\n              <div className={Style.formDiv}>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"column_name\"\r\n                  id=\"column_name\"\r\n                  required\r\n                  value={columnName}\r\n                  onChange={handleChange}\r\n                  placeholder=\"e.g staging,done,etc\"\r\n                />\r\n              </div>\r\n              <div className={Style.buttons}>\r\n                <button className={Style.btn1} type=\"submit\" id=\"CreateColumn\">\r\n                  Add Column\r\n                </button>\r\n                <button\r\n                  className={Style.btn2}\r\n                  id=\"close\"\r\n                  onClick={handleCloseModal}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Add_Column;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport Style from \"./Card.module.scss\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport Pic from \"../../stone.jpg\";\r\nimport swal from \"sweetalert\";\r\nimport { withRouter, useParams, useLocation } from \"react-router-dom\";\r\nconst Card = ({ columnId, isCardDragged }) => {\r\n  const location = useLocation();\r\n  console.log(\"location: \",location);\r\n  const { boardId, boardMembers } = location.state;\r\n  const { boardName } = useParams();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showCardDetails, setShowCardDetails] = useState(false);\r\n  const [taskTitle, setTaskTitle] = useState(\"\");\r\n  const [taskMembers, setTaskMembers] = useState([]);\r\n  const [taskDescription, setTaskDescription] = useState(\"\");\r\n  const [taskDueDate, setTaskDueDate] = useState(\"\");\r\n  const [isCardInserted, setIsCardInseterted] = useState(false);\r\n  const [cardDetails, setCardDetails] = useState({});\r\n  const [cardDetailsTitle, setCardDetailsTitle] = useState(\"\");\r\n  const [cardDetailsMembers, setCardDetailsMembers] = useState([]);\r\n  const [cardDetailsDescription, setCardDetailsDescription] = useState(\"\");\r\n  const [cardDetailsDueDate, setCardDetailsDueDate] = useState(\"\");\r\n  const [cardId, setCardId] = useState(\"\");\r\n  const [editCardDetails, setEditCardDetails] = useState(false);\r\n  const [isCardEdited, setIsCardEdited] = useState(false);\r\n  const [isCardDeleted, setIsCardDeleted] = useState(false);\r\n  let todayDate = new Date().toISOString().slice(0, 10);\r\n\r\n  let handleAddCard = () => {\r\n    setShowModal(true);\r\n    setEditCardDetails(false);\r\n  };\r\n  let handleModalClose = () => {\r\n    setShowModal(false);\r\n  };\r\n  let handleTaskTitleChange = (e) => {\r\n    setTaskTitle(e.target.value);\r\n  };\r\n  let handleTaskDescriptionChange = (e) => {\r\n    setTaskDescription(e.target.value);\r\n  };\r\n  let handleTaskDateChange = (e) => {\r\n    setTaskDueDate(e.target.value);\r\n  };\r\n  let handleTaskMembersChange = (e) => {\r\n    let selectedoptions = e.target.selectedOptions;\r\n    let members = [...selectedoptions].map((member) => member.value);\r\n    // console.log(members);\r\n    setTaskMembers(members);\r\n  };\r\n\r\n  let handleInsertCard = (e) => {\r\n    console.log(\"button clicked\");\r\n    e.preventDefault();\r\n    console.log(cardDetailsDueDate, todayDate);\r\n    if (editCardDetails) {\r\n      axios\r\n        .put(\r\n          `https://pro-organizer-app-4cab0.firebaseio.com/BoardData/${boardId}/board_column/${columnId}/card/${cardId}/.json`,\r\n          {\r\n            taskTitle: taskTitle == \"\" ? cardDetailsTitle : taskTitle,\r\n            taskMembers: taskMembers == \"\" ? cardDetailsMembers : taskMembers,\r\n            taskDescription:\r\n              taskDescription == \"\" ? cardDetailsDescription : taskDescription,\r\n            taskDueDate: taskDueDate == \"\" ? cardDetailsDueDate : taskDueDate,\r\n          }\r\n        )\r\n        .then((res) =>\r\n          swal(\"The card is Edited sucessfully 😃\", {\r\n            icon: \"success\",\r\n            buttons: false,\r\n            timer: 3000,\r\n          })\r\n        )\r\n        .catch((err) => alert(err.message));\r\n      setEditCardDetails(false);\r\n      setShowModal(false);\r\n      setIsCardEdited(true);\r\n    } else {\r\n      if (!(taskDueDate < todayDate)) {\r\n        axios\r\n          .post(\r\n            `https://pro-organizer-app-4cab0.firebaseio.com/BoardData/${boardId}/board_column/${columnId}/card/.json`,\r\n            {\r\n              taskTitle,\r\n              taskMembers,\r\n              taskDescription,\r\n              taskDueDate,\r\n            }\r\n          )\r\n          .then((res) => setIsCardInseterted(true))\r\n          .catch((err) => {\r\n            alert(\"s0mething went wrong ,\" + err.message);\r\n          });\r\n        setShowModal(false);\r\n        setTaskTitle(\"\");\r\n        setTaskMembers([]);\r\n        setTaskDescription(\"\");\r\n        setTaskDueDate(\"\");\r\n      } else {\r\n        swal(\"Invalid Date\", \"You can't select past date as DUEDATE\", \"info\");\r\n      }\r\n    }\r\n  };\r\n\r\n  let getCardDetails = () => {\r\n    axios\r\n      .get(\r\n        `https://pro-organizer-app-4cab0.firebaseio.com/BoardData/${boardId}/board_column/${columnId}/card.json`\r\n      )\r\n      .then((response) => setCardDetails(response.data))\r\n      .catch((err) => alert(\"something went wrong,\" + err.message));\r\n  };\r\n  useEffect(() => {\r\n    setIsCardInseterted(false);\r\n    setIsCardEdited(false);\r\n    getCardDetails();\r\n  }, [isCardInserted, isCardEdited, cardDetails, isCardDeleted, isCardDragged]);\r\n\r\n  let handleCardDetailsClick = (\r\n    taskTitle,\r\n    taskDescription,\r\n    taskDueDate,\r\n    taskMembers,\r\n    cardId\r\n  ) => {\r\n    setShowCardDetails(true);\r\n    setCardDetailsTitle(taskTitle);\r\n    setCardDetailsDescription(taskDescription);\r\n    setCardDetailsMembers(taskMembers);\r\n    setCardDetailsDueDate(taskDueDate);\r\n    setCardId(cardId);\r\n  };\r\n  let handleCloseCardDetails = () => {\r\n    setShowCardDetails(false);\r\n  };\r\n\r\n  let handleCardDetailsEdit = () => {\r\n    console.log(cardDetailsTitle, cardDetailsDueDate, cardDetailsDescription);\r\n    setShowModal(true);\r\n    setShowCardDetails(false);\r\n    setEditCardDetails(true);\r\n  };\r\n  let handleCardDetailsArchive = () => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: `${cardDetailsTitle.toUpperCase()} card will be deleted`,\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        return (\r\n          axios\r\n            .delete(\r\n              `https://pro-organizer-app-4cab0.firebaseio.com/BoardData/${boardId}/board_column/${columnId}/card/${cardId}/.json`\r\n            )\r\n            .then((response) => {\r\n              setIsCardDeleted(true);\r\n              setShowCardDetails(false);\r\n            })\r\n            .catch((err) => alert(\"something went wrong,\" + err.message)),\r\n          swal(`${cardDetailsTitle.toUpperCase()} card Deleted Succesfully`, {\r\n            icon: \"success\",\r\n          })\r\n        );\r\n      } else {\r\n        swal(`${cardDetailsTitle.toUpperCase()} card not Deleted 😁!`);\r\n      }\r\n    });\r\n  };\r\n\r\n  let handleDragging = (dragcardId, cardData, e) => {\r\n    console.log(dragcardId);\r\n    let draggedCardDetails = {\r\n      columnId,\r\n      dragcardId: dragcardId,\r\n      cardData,\r\n    };\r\n    e.dataTransfer.setData(\"text\", JSON.stringify(draggedCardDetails));\r\n  };\r\n  return (\r\n    <>\r\n      {cardDetails &&\r\n        Object.entries(cardDetails).map((card) => (\r\n          <Fragment key={card[0]}>\r\n            <div\r\n              draggable\r\n              onDragStart={(e) => handleDragging(card[0], card[1], e)}\r\n              className={Style.addedcard}\r\n              onClick={() =>\r\n                handleCardDetailsClick(\r\n                  card[1].taskTitle,\r\n                  card[1].taskDescription,\r\n                  card[1].taskDueDate,\r\n                  card[1].taskMembers,\r\n                  card[0]\r\n                )\r\n              }\r\n            >\r\n              <div\r\n                style={{\r\n                  textTransform: \"uppercase\",\r\n                  display: \"flex\",\r\n                }}\r\n              >\r\n                <h5>{card[1].taskTitle}</h5>\r\n              </div>\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <i style={{ fontSize: \"22px\" }} class=\"fas fa-tasks\"></i>\r\n                <div style={{ display: \"flex\", margin: \"0px 3px\" }}>\r\n                  {card[1].taskMembers.map((member) => (\r\n                    <div className={Style.members}>{member.charAt(0)}</div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n        ))}\r\n      <div onClick={handleAddCard} className={Style.cardelement}>\r\n        <h6 style={{ textAlign: \"center\" }}>Add a card</h6>\r\n      </div>\r\n      {showModal && (\r\n        <Modal>\r\n          {editCardDetails ? (\r\n            <h4\r\n              style={{ backgroundImage: `url(${Pic})` }}\r\n              className={Style.title}\r\n            >\r\n              Edit Card Details\r\n            </h4>\r\n          ) : (\r\n            <h4\r\n              style={{ backgroundImage: `url(${Pic})` }}\r\n              className={Style.title}\r\n            >\r\n              Add Card\r\n            </h4>\r\n          )}\r\n\r\n          <form onSubmit={handleInsertCard}>\r\n            <label className=\"ml-3\" htmlFor=\"task_title\">\r\n              <h5>Enter a title for your task</h5>\r\n            </label>{\" \"}\r\n            <div className={Style.formDiv}>\r\n              <input\r\n                type=\"text\"\r\n                name=\"task_title\"\r\n                id=\"title\"\r\n                defaultValue={editCardDetails ? cardDetailsTitle : \"\"}\r\n                required\r\n                placeholder=\"e.g Add a new icon\"\r\n                onChange={handleTaskTitleChange}\r\n              />\r\n            </div>\r\n            <label className=\"ml-3\" htmlFor=\"task_members\">\r\n              <h5>Choose members for this task(select multiple ,if needed)</h5>\r\n            </label>\r\n            <div className={Style.formDiv}>\r\n              <select\r\n                name=\"task_members\"\r\n                id=\"members\"\r\n                multiple\r\n                defaultValue={editCardDetails ? cardDetailsMembers : \"\"}\r\n                required\r\n                onChange={handleTaskMembersChange}\r\n              >\r\n                {boardMembers.split(\",\").map((member) => (\r\n                  <option key={member} value={member}>\r\n                    {member}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <label className=\"ml-3\" htmlFor=\"task_description\">\r\n              <h5>Add the description for your task</h5>\r\n            </label>{\" \"}\r\n            <div className={Style.formDiv}>\r\n              <input\r\n                type=\"text\"\r\n                name=\"task_description\"\r\n                id=\"description\"\r\n                defaultValue={editCardDetails ? cardDetailsDescription : \"\"}\r\n                placeholder=\"Add your description here\"\r\n                required\r\n                onChange={handleTaskDescriptionChange}\r\n              />\r\n            </div>\r\n            <label className=\"ml-3\" htmlFor=\"task_due_date\">\r\n              <h5>Select the due date for this task</h5>\r\n            </label>\r\n            <div className={Style.formDiv}>\r\n              <input\r\n                type=\"date\"\r\n                name=\"task_due_date\"\r\n                id=\"due_date\"\r\n                defaultValue={editCardDetails ? cardDetailsDueDate : \"\"}\r\n                required\r\n                onChange={handleTaskDateChange}\r\n              />\r\n            </div>\r\n            <div className={Style.buttons}>\r\n              {editCardDetails ? (\r\n                <button className={Style.btn1} type=\"submit\" id=\"CreateCard\">\r\n                  Edit Card\r\n                </button>\r\n              ) : (\r\n                <button className={Style.btn1} type=\"submit\" id=\"CreateCard\">\r\n                  Add Card\r\n                </button>\r\n              )}\r\n              <button\r\n                className={Style.btn2}\r\n                id=\"closeCard\"\r\n                onClick={handleModalClose}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Modal>\r\n      )}\r\n      {showCardDetails && (\r\n        <Modal>\r\n          <div>\r\n            <div className={Style.cardDetails}>\r\n              <div>\r\n                <h4 className={Style.cardtitle}>{cardDetailsTitle}</h4>\r\n              </div>\r\n              <div className={Style.handleButtons}>\r\n                <button\r\n                  className={Style.btn1}\r\n                  id=\"edit\"\r\n                  onClick={handleCardDetailsEdit}\r\n                >\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  className={Style.btn2}\r\n                  id=\"archive\"\r\n                  onClick={handleCardDetailsArchive}\r\n                >\r\n                  Archive\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n              <span style={{ margin: \"3px 10px\", fontWeight: \"600\" }}>\r\n                in<h6 className={Style.boardtype}>{boardName}</h6>\r\n              </span>\r\n            </div>\r\n            <hr />\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n                margin: \"15px 0px\",\r\n              }}\r\n            >\r\n              <h5>Description</h5>\r\n              <p>{cardDetailsDescription}</p>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n                margin: \"15px 0px\",\r\n              }}\r\n            >\r\n              <h5>Members</h5>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-around\",\r\n                  margin: \"15px 0px\",\r\n                }}\r\n              >\r\n                {cardDetailsMembers.map((member) => (\r\n                  <div className={Style.membersboard}>{member.charAt(0)}</div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n                margin: \"15px 0px\",\r\n              }}\r\n            >\r\n              <h5>Due Date</h5>\r\n              <p>{cardDetailsDueDate}</p>\r\n            </div>\r\n          </div>\r\n          <button class={Style.button} onClick={handleCloseCardDetails}>\r\n            Cancel\r\n          </button>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Card);\r\n","import React from \"react\";\r\nimport Style from \"./Board_Column.module.scss\";\r\nimport Card from \"../BoardColumnCard/Card\";\r\nimport axios from \"axios\";\r\n\r\nconst Board_Column = ({\r\n  handleColumnDelete,\r\n  columnName,\r\n  columnId,\r\n  isCardDragged,\r\n  boardId,\r\n  setIsCardDragged,\r\n}) => {\r\n  let handleDragDrop = (e) => {\r\n    e.preventDefault();\r\n    let droppingCardData = JSON.parse(e.dataTransfer.getData(\"text\"));\r\n    console.log(droppingCardData);\r\n    let draggingFromColumnId = droppingCardData.columnId;\r\n    let draggingFromCardId = droppingCardData.dragcardId;\r\n    let draggingFromCardData = droppingCardData.cardData;\r\n\r\n    console.log(boardId, draggingFromColumnId, draggingFromCardId);\r\n    axios\r\n      .delete(\r\n        `https://pro-organizer-app-4cab0.firebaseio.com/BoardData/${boardId}/board_column/${draggingFromColumnId}/card/${draggingFromCardId}/.json`\r\n      )\r\n      .then((res) => console.log(res))\r\n      .catch((err) => alert(\"something went wrong,\" + err.message));\r\n\r\n    axios\r\n      .post(\r\n        `https://pro-organizer-app-4cab0.firebaseio.com/BoardData/${boardId}/board_column/${columnId}/card/.json`,\r\n        {\r\n          taskTitle: draggingFromCardData.taskTitle,\r\n          taskDescription: draggingFromCardData.taskDescription,\r\n          taskDueDate: draggingFromCardData.taskDueDate,\r\n          taskMembers: draggingFromCardData.taskMembers,\r\n        }\r\n      )\r\n      .then((res) => console.log(res))\r\n      .catch((err) => {\r\n        alert(\"something went wrong while dragging,\" + err.message);\r\n      });\r\n    setIsCardDragged(true);\r\n  };\r\n  return (\r\n    <div className={Style.uppreroutercontainer}>\r\n      <div className={Style.outercontainer}>\r\n        <div className={Style.innercontainer}>\r\n          <h6\r\n            style={{\r\n              fontSize: \"18px\",\r\n              textTransform: \"uppercase\",\r\n              marginLeft: \"10px\",\r\n            }}\r\n          >\r\n            {columnName}\r\n          </h6>\r\n          <span onClick={() => handleColumnDelete(columnId)}>\r\n            <i\r\n              \r\n              style={{\r\n                fontSize: \"18px\",\r\n                textTransform: \"uppercase\",\r\n                marginRight: \"10px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              class=\"far  fa-trash-alt\"\r\n            ></i>\r\n          </span>\r\n        </div>\r\n        <div\r\n          className={Style.cardelement}\r\n          onDragOver={(e) => e.preventDefault()}\r\n          onDrop={handleDragDrop}\r\n        >\r\n          <Card columnId={columnId} isCardDragged={isCardDragged} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board_Column;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Style from \"./MyBoard.module.scss\";\r\nimport axios from \"axios\";\r\nimport AddColumn from \"../../Components/AddColumns/Add_Column\";\r\nimport BoardColumn from \"../../Components/BoardColumn/Board_Column\";\r\nimport { useHistory, useParams, useLocation } from \"react-router\";\r\nimport swal from \"sweetalert\";\r\nconst MyBoard = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { boardId } = location.state;\r\n  const { boardName } = useParams();\r\n  const [newColumn, setnewColumn] = useState({});\r\n  const [showColumn, setShowColumn] = useState(false);\r\n  const [isCardDragged, setIsCardDragged] = useState(false);\r\n  const [isColumnDeleted, setIsColumnDeleted] = useState(false);\r\n  useEffect(() => {\r\n    setIsColumnDeleted(false);\r\n    setShowColumn(false);\r\n    setIsCardDragged(false);\r\n    getColumnName();\r\n  }, [showColumn, isColumnDeleted, isCardDragged]);\r\n\r\n  let getColumnName = () => {\r\n    axios\r\n      .get(\r\n        `https://pro-organizer-app-4cab0.firebaseio.com/BoardData/${boardId}/board_column/.json`\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setnewColumn(response.data);\r\n      })\r\n      .catch((err) => {\r\n        alert(\"something went wrong ,\" + err.message);\r\n      });\r\n  };\r\n  let HandleColumnDelete = (columnId) => {\r\n    axios\r\n      .delete(\r\n        `https://pro-organizer-app-4cab0.firebaseio.com/BoardData/${boardId}/board_column/${columnId}/.json`\r\n      )\r\n      .then((response) => setIsColumnDeleted(true))\r\n      .catch((err) => {\r\n        alert(\"something went wrong ,\" + err.message);\r\n      });\r\n  };\r\n\r\n  let reDirectToHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n  let handleBoardDelete = () => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: `Your ${boardName.toUpperCase()} board  will be Deleted`,\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        return (\r\n          axios\r\n            .delete(\r\n              `https://pro-organizer-app-4cab0.firebaseio.com/BoardData/${boardId}/.json`\r\n            )\r\n            .then((response) => {\r\n              reDirectToHome();\r\n            }),\r\n          swal(`${boardName.toUpperCase()} Deleted`, {\r\n            icon: \"success\",\r\n          })\r\n        );\r\n      } else {\r\n        swal(`Your ${boardName.toUpperCase()}  board is safe  😃!`);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={Style.mainContainer}>\r\n      <div className={Style.myboard}>\r\n        <h4 className={Style.boardTitle}>{boardName.toUpperCase()}</h4>\r\n        <button className={Style.smallbtn} onClick={handleBoardDelete}>\r\n          Delete Board\r\n        </button>\r\n      </div>\r\n      <div className={Style.container}>\r\n        {newColumn &&\r\n          Object.entries(newColumn).map((column) => (\r\n            <BoardColumn\r\n              key={column[0]}\r\n              columnName={column[1].columnName}\r\n              columnId={column[0]}\r\n              isCardDragged={isCardDragged}\r\n              handleColumnDelete={HandleColumnDelete}\r\n              boardId={boardId}\r\n              setIsCardDragged={setIsCardDragged}\r\n            />\r\n          ))}\r\n        <AddColumn boardId={boardId} setShowColumn={setShowColumn} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyBoard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./SignIn_SignUp.scss\";\r\nimport swal from \"sweetalert\";\r\nimport PIC from \"../../../src/user.png\";\r\nimport {\r\n  signInWithGoogle,\r\n  auth,\r\n  createUserProfileDocument,\r\n} from \"../../Firebase/Firebase.utils\";\r\nimport Swal from \"@sweetalert/with-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst SignIn_SignUp = () => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [signup_password, set_signup_password] = useState(\"\");\r\n  const [signup_username, set_signup_username] = useState(\"\");\r\n  const [signup_email, set_signup_email] = useState(\"\");\r\n  const history = useHistory();\r\n  let SignUpbtn = () => {\r\n    let x = document.getElementById(\"SignIn\");\r\n    let y = document.getElementById(\"SignUp\");\r\n    let z = document.getElementById(\"btn\");\r\n    x.style.left = \"-400px\";\r\n    y.style.left = \"50px\";\r\n    z.style.left = \"130px\";\r\n  };\r\n  let SignInbtn = () => {\r\n    let x = document.getElementById(\"SignIn\");\r\n    let y = document.getElementById(\"SignUp\");\r\n    let z = document.getElementById(\"btn\");\r\n    x.style.left = \"50px\";\r\n    y.style.left = \"450px\";\r\n    z.style.left = \"0px\";\r\n  };\r\n  let reDirectToHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  let handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { user } = await auth.createUserWithEmailAndPassword(\r\n        signup_email,\r\n        signup_password\r\n      );\r\n      await createUserProfileDocument(user, { signup_username });\r\n\r\n      reDirectToHome();\r\n      Swal(\r\n        <div\r\n          style={{\r\n            backgroundImage: `url(${PIC})`,\r\n            backgroundSize: \"100% 100%\",\r\n          }}\r\n        >\r\n          <h2>\r\n            WElCOME <h1>{signup_username.toUpperCase()}</h1>\r\n          </h2>\r\n          <p>Now you can acces all features</p>\r\n        </div>\r\n      );\r\n      set_signup_password(\"\");\r\n      set_signup_email(\"\");\r\n\r\n      set_signup_username(\"\");\r\n    } catch (err) {\r\n      alert(\"something went wrong\" + err.message);\r\n    }\r\n  };\r\n  let handleSignIn = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await auth.signInWithEmailAndPassword(email, password);\r\n      reDirectToHome();\r\n      Swal(\r\n        <div\r\n          style={{\r\n            backgroundImage: `url(${PIC})`,\r\n            backgroundSize: \"100% 100%\",\r\n          }}\r\n        >\r\n          <h2>\r\n            WElC😍ME <h3>{email}</h3>\r\n          </h2>\r\n          <p>Now you can acces all features</p>\r\n        </div>\r\n      );\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n    } catch (err) {\r\n      Swal(\r\n        <div>\r\n          <h4>\r\n            <i class=\"fas fa-user-lock\"></i> Please check your Enteries\r\n            <i class=\"fas fa-key\"></i>\r\n          </h4>\r\n          <h6 style={{ color: \"#ff6b6b\" }}>\r\n            Either{\" \"}\r\n            <b>\r\n              <u>Email</u>\r\n            </b>{\" \"}\r\n            or{\" \"}\r\n            <b>\r\n              <u>Password</u>{\" \"}\r\n            </b>{\" \"}\r\n            is Wrong\r\n          </h6>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mainContainer\">\r\n      <div className=\"formContainer\">\r\n        <div className=\"buttonBox\">\r\n          <div id=\"btn\"></div>\r\n          <button onClick={SignInbtn} className=\"toggle_btn\">\r\n            Sign In\r\n          </button>\r\n          <button onClick={SignUpbtn} className=\"toggle_btn\">\r\n            Sign Up\r\n          </button>\r\n        </div>\r\n        <form id=\"SignIn\" onSubmit={handleSignIn}>\r\n          <input\r\n            className=\"input\"\r\n            type=\"email\"\r\n            name=\"useremail\"\r\n            id=\"useremail\"\r\n            placeholder=\"Enter em@il Id \"\r\n            required\r\n            value={email}\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n          <input\r\n            className=\"input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            required\r\n            value={password}\r\n            onChange={(e) => {\r\n              setPassword(e.target.value);\r\n            }}\r\n          />\r\n          <div className=\"handle\">\r\n            <input\r\n              className=\"inputcheck\"\r\n              type=\"checkbox\"\r\n              name=\"remember-password\"\r\n              id=\"remember-password\"\r\n            />\r\n            &nbsp; <span style={{ fontSize: \"13px\" }}>Remember Password</span>{\" \"}\r\n          </div>\r\n          <button className=\"buttonss\" type=\"submit\">\r\n            Login\r\n          </button>\r\n          <div\r\n            style={{\r\n              margin: \"auto\",\r\n            }}\r\n            className='or'\r\n          >\r\n            or{\" \"}\r\n          </div>\r\n          <button onClick={signInWithGoogle} className=\"googlebtn \">\r\n            Google{\" \"}\r\n            <i\r\n              style={{ padding: \"2px 3px\",fontSize:\"20px\" }}\r\n              class=\"fab fa-google-plus-square\"\r\n            ></i>\r\n          </button>\r\n        </form>\r\n        <form id=\"SignUp\" onSubmit={handleSignUp}>\r\n          <input\r\n            className=\"input\"\r\n            type=\"email\"\r\n            name=\"useremail\"\r\n            id=\"signup_email\"\r\n            placeholder=\" Enter em@il  Id\"\r\n            required\r\n            value={signup_email}\r\n            onChange={(e) => {\r\n              set_signup_email(e.target.value);\r\n            }}\r\n          />\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            name=\"signup_username\"\r\n            id=\"signup_username\"\r\n            placeholder=\"Enter UserName\"\r\n            required\r\n            value={signup_username}\r\n            onChange={(e) => {\r\n              set_signup_username(e.target.value);\r\n            }}\r\n          />\r\n          <input\r\n            className=\"input\"\r\n            type=\"password\"\r\n            name=\"signup-password\"\r\n            id=\"signup_password\"\r\n            placeholder=\"Enter Password\"\r\n            required\r\n            value={signup_password}\r\n            onChange={(e) => {\r\n              set_signup_password(e.target.value);\r\n              console.log(signup_password);\r\n            }}\r\n          />\r\n          <div className=\"handle\">\r\n            <input\r\n              className=\"inputcheck\"\r\n              type=\"checkbox\"\r\n              name=\"remember-password\"\r\n              id=\"remember-password\"\r\n              required\r\n            />\r\n            <span className=\"span\">I agree to the terms and condition</span>{\" \"}\r\n          </div>\r\n          <button className=\"buttonss\" type=\"submit\">\r\n            SignUp\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn_SignUp;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport NavBar from \"./Components/NavBar/NavBar\";\r\nimport Homepage from \"./Pages/Homepage/Homepage\";\r\nimport Board_Page from \"./Pages/CreateBoardPage/Board_Page\";\r\nimport MyBoard_Page from \"./Pages/IndividualBoardPage/MyBoard\";\r\nimport SignIn_SignUp_Page from \"./Pages/SignInSignUp Page/SignIn_SignUp\";\r\nimport { auth, createUserProfileDocument } from \"./Firebase/Firebase.utils\"; //so that our appn listens to user state changes from firebase\r\n\r\nconst App = () => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  let unSubscribeFromAuth = null;\r\n  // useEffect(() => {\r\n  //   unSubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\r\n  //     // setCurrentUser(user);\r\n  //     // createUserProfileDocument(user);\r\n  //     // console.log(user);\r\n  //     if (userAuth) {\r\n  //       const userRef = await createUserProfileDocument(userAuth);\r\n  //       userRef.onSnapshot((snapShot) => {\r\n  //         // console.log(snapShot.data());\r\n  //         setCurrentUser({ id: snapShot.id, ...snapShot.data() });\r\n  //       });\r\n  //     } else {\r\n  //       setCurrentUser(userAuth);\r\n  //     }\r\n  //   });\r\n  //   return () => {\r\n  //     console.log(\"it works as component will unmount.\");\r\n  //     unSubscribeFromAuth(); //it will close the subscription\r\n  //   };\r\n  // }, []);\r\n  // console.log(currentUser);\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar currentUser={currentUser} />\r\n      <Switch>\r\n        <Route path=\"/signin\" component={SignIn_SignUp_Page} />\r\n        <Route\r\n          path=\"/\"\r\n          exact\r\n          render={() => <Homepage />\r\n            // currentUser ? <Homepage /> : <Redirect to=\"/signin\" />\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/createboard\"\r\n          exact\r\n          strict\r\n          render={() => <Board_Page />\r\n            // currentUser ? <Board_Page /> : <Redirect to=\"/signin\" />\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/:boardName\"\r\n          render={() => <MyBoard_Page /> \r\n            // currentUser ? <MyBoard_Page /> : <Redirect to=\"/signin\" />\r\n          }\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","let Homepage_Initial_State = {\r\n  loading: true,\r\n  boardData: [],\r\n  error: \"\",\r\n};\r\nexport default Homepage_Initial_State;\r\n","import Homepage_Initial_State from \"../Initial State/Homepage_Initial_State\";\r\nimport {\r\n  FETCH_BOARD_DATA,\r\n  FETCH_BOARD_DATA_SUCCESS,\r\n  FETCH_BOARD_DATA_FAILURE,\r\n} from \"../../Actions/Action Constants/Homepage_Action_Constants/Homepage_Action_constants\";\r\nlet HomepageReducer = (state = Homepage_Initial_State, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BOARD_DATA:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_BOARD_DATA_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        boardData: action.payload,\r\n        error: \"\",\r\n      };\r\n    case FETCH_BOARD_DATA_FAILURE:\r\n      return {\r\n        loading: false,\r\n        boardData: [],\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default HomepageReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport HomepageReducer from \"../Reducers/Homepage_Reducer/HomepageReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport { logger } from \"redux-logger\";\r\nlet allReducers = combineReducers({\r\n  HomepageReducer,\r\n});\r\nlet GlobalStore = createStore(\r\n  allReducers,\r\n  composeWithDevTools(applyMiddleware(logger, thunk))\r\n);\r\nexport default GlobalStore;\r\n","import React, { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport axe from \"react-axe\";\r\nimport { Provider } from \"react-redux\";\r\nimport GlobalStore from \"./Redux/Store/GlobalStore\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  axe(React, ReactDOM, 1000);\r\n}\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n    <Provider store={GlobalStore}>\r\n      <App />\r\n    </Provider>\r\n    </HashRouter>\r\n  </StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Add_Column_title__3_EKX\",\"container\":\"Add_Column_container__2FlSa\",\"heading\":\"Add_Column_heading__1k8dh\",\"formDiv\":\"Add_Column_formDiv__fuZ56\",\"buttons\":\"Add_Column_buttons__36LcN\",\"btn1\":\"Add_Column_btn1__3PED0\",\"btn2\":\"Add_Column_btn2__19gv7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NavBar_container__2vJRs\",\"brand\":\"NavBar_brand__2ROB0\",\"nav-style\":\"NavBar_nav-style__1Dhax\",\"active\":\"NavBar_active__1QcjK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Homepage_Container__1_n2M\",\"Boards\":\"Homepage_Boards__3xSeg\",\"Noboards\":\"Homepage_Noboards__EbKuV\",\"mainContainer\":\"Homepage_mainContainer__3P95i\",\"board\":\"Homepage_board__25R8c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board_container\":\"Board_Page_board_container__22blS\",\"createboard\":\"Board_Page_createboard__1s79J\",\"formDiv\":\"Board_Page_formDiv__-bXiI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"MyBoard_mainContainer__3LZd7\",\"container\":\"MyBoard_container__2LXAV\",\"myboard\":\"MyBoard_myboard__27Y8U\",\"boardTitle\":\"MyBoard_boardTitle__37ANm\"};","module.exports = __webpack_public_path__ + \"static/media/stone.1cc1da05.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outercontainer\":\"Board_Column_outercontainer__31ZtU\",\"innercontainer\":\"Board_Column_innercontainer__3rp87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardelement\":\"Card_cardelement__KjQ8Y\",\"addedcard\":\"Card_addedcard__20tEG\",\"members\":\"Card_members__1fZi-\",\"formDiv\":\"Card_formDiv__166z8\",\"title\":\"Card_title__3vPvJ\",\"buttons\":\"Card_buttons__3augg\",\"btn1\":\"Card_btn1__3cvuH\",\"btn2\":\"Card_btn2__3XvJ7\",\"cardDetails\":\"Card_cardDetails__NwZFC\",\"cardtitle\":\"Card_cardtitle__3_RBE\",\"handleButtons\":\"Card_handleButtons__3xWC7\",\"boardtype\":\"Card_boardtype__1BkgQ\",\"membersboard\":\"Card_membersboard__1aMN1\",\"button\":\"Card_button__2agQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Modal_Backdrop__3ZNLB\",\"Modal_content\":\"Modal_Modal_content__1Mxf3\"};","module.exports = __webpack_public_path__ + \"static/media/user.27dd9c0a.png\";"],"sourceRoot":""}